#!/bin/bash

PROGNAME="$(basename "${0}")"

_usage() {
    printf "%s\\n" "Usage: ${PROGNAME} [RANGE] [PATH] [FOLDERS] [SIZE] [HELP]"
    printf "%s\\n" "Create bunch of files with 10 random lines."
    printf "%s\\n" "Example: ${PROGNAME} -r=10 -p=\"~/tmp\""
    printf "%s\\n" "Example: ${PROGNAME} -r=10 -f=2"
    printf "%s\\n" "Example: ${PROGNAME} -r=10 -s=2m"
    printf "\\n"
    printf "%s\\n" "  -r, --range       how many files, default 5"
    printf "%s\\n" "  -p, --path        where to create, default current folder"
    printf "%s\\n" "  -f, --folders     create up to 5 folders, default none"
    printf "%s\\n" "  -s, --size        create binary files with specified byte size. use a number followed by b (byte), k (kb), m (mb), and g (gb)"
    printf "\\n"
    printf "%s\\n" "  -h, --help        show this help message and exit"
    exit 1	
}

_die() {
    echo $1
    echo " "
    _usage >&2
    exit 1
}

_create_txt(){
    where=$1
    r=$RANDOM
    q=$((RANDOM % 9 + 1))
    echo "creating $where/$r.txt"
    lorem --randomize --quote $q --lines 10 > "$where/$r.txt"    
}

_create_bin(){
    where=$1
    r=$RANDOM
    echo "creating $where/$r.txt"
    mkfile $SZ "$where/$r.txt"
}

_generate(){
    where=$1

    for ((run=1; run <= RANGE; run++))
    do
        if [ "$SZ" == "" ]; then
            _create_txt "$where"
        else
            _create_bin "$where"
        fi    
    done
}

_parse() {
    while [ "$1" != "" ]; do
        PARAM=`echo $1 | awk -F= '{print $1}'`
        VALUE=`echo $1 | sed 's/^[^=]*=//g'`
        case $PARAM in
            -h | --help)
                _usage
                exit
                ;;
            -r | --range)
                if [[ "$VALUE" =~ ^[0-9]+$ ]]; then
                    RANGE=$VALUE
                else
                    _die "ERROR: Wrong number of files"
                fi
                ;;
            -f | --folders)
                if [[ "$VALUE" =~ ^([1-5])$ ]]; then
                    FOLDERS=$VALUE
                else
                    _die "ERROR: Wrong number of folders"
                fi
                ;;
            -p | --path)
                if [ -d "$VALUE" ]; then
                    WHR=$VALUE
                    #tilde is not expanded inside quotes
                    WHR=`echo $WHR | sd '~' '/Users/XXXX'`
                else
                    _die "ERROR: path does not exist"
                fi    
                ;;
            -s | --size)
                if [[ "$VALUE" =~ ^([0-9]+)(b|k|g)$ ]]; then
                    SZ=$VALUE
                else
                    _die "ERROR: Size does not match the expected format"
                fi
                ;;
            *)
                _die "ERROR: unknown parameter \"$PARAM\""
                ;;
        esac
        shift
    done
}

#defaults
RANGE=5
WHR="."
FOLDERS=""
SZ=""

#parse
_parse "$@"

#generate
if [ "$FOLDERS" == "" ]; then
    _generate $WHR
else
    for ((dirs=1; dirs <= FOLDERS; dirs++))
    do
        chr=$(printf "\x$(printf %x $((dirs + 96)))")
        nm="${chr}${chr}${chr}"
        whr2="$WHR/$nm"
        
        if [ ! -d "$whr2" ]; then
            mkdir $whr2
        fi

        _generate $whr2
    done
fi
